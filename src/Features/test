import React, { useState, useEffect } from 'react';
import {  useParams } from 'react-router-dom';
import axios from 'axios';
import Modal from '@mui/material/Modal';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import Button from '@mui/material/Button';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemText from '@mui/material/ListItemText';
import Grid from '@mui/material/Grid';
import { Card, CardContent } from '@mui/material';
import SuivreCoursModal from '../../Components/Modals/CoursesModal/SuivreCoursModal';

const apiUrl = 'http://localhost:8000/api';

const modalStyle = {
  position: 'absolute',
  top: '50%',
  left: '50%',
  transform: 'translate(-50%, -50%)',
  width: 400,
  bgcolor: 'background.paper',
  boxShadow: 24,
  p: 4,
};

function ClasseDetails() {
  const { classId } = useParams();
  const [classDetails, setClassDetails] = useState(null);
  const [courses, setCourses] = useState([]);
  const [selectedCourse, setSelectedCourse] = useState(null);
  const [modalIsOpen, setModalIsOpen] = useState(false);
  const [modalOpen, setModalOpen] = useState(false);
  const handleModalOpen = () => {
    setModalOpen(true);
  };

  const handleModalClose = () => {
    setModalOpen(false);
  };

  const handleSaveSuivi = (formData) => {
    // Handle saving the suivi data to the server
    console.log(formData);
  };


  useEffect(() => {
    axios.get(`${apiUrl}/showClasse/${classId}`)
      .then(response => {
        setClassDetails(response.data);
      })
      .catch(error => {
        console.error('Erreur lors de la récupération des détails de la classe :', error);
      });

    axios.get(`${apiUrl}/coursE/showClassById/${classId}`)
      .then(response => {
        setCourses(response.data.cours);
      })
      .catch(error => {
        console.error('Erreur lors de la récupération des cours enroulés :', error);
      });
  }, [classId]);

  const openModal = (course) => {
    setSelectedCourse(course);
    setModalIsOpen(true);
  };

  const closeModal = () => {
    setSelectedCourse(null);
    setModalIsOpen(false);
  };

  return (
    <Grid container spacing={3}>
        <Grid >
        {classDetails && (
                 <Card sx={{ backgroundColor: '#1976d2', color: 'white', height: '100%' }}>
                   <CardContent>
                     <Typography variant="subtitle1">
                       {classDetails.className}
                     </Typography>
                   </CardContent>
                 </Card>
        )}
        </Grid>

      <Grid item xs={12} >
        <Typography variant="h6">Modules Assignés à cette classe</Typography>
        {courses.length > 0 ? (
          <List >
            {courses.map(course => (
              <ListItem key={course.id}>
                <ListItemText
                  primary={`Module : ${course.module_id.moduleName}`}
                />
                <Button
                  variant="outlined"
                  color="primary"
                  onClick={() => openModal(course)}
                  style={{ marginRight: '16px' }}
                >
                  VOIR DETAILS
                </Button>
                <Button
                variant="contained"
                color="primary"
                onClick={handleModalOpen}
                >
                  Faire le suivi
              </Button>
              </ListItem>
            ))}
          </List>
        ) : (
          <Typography variant="body1">Aucun module n'a été enroulé à cette classe.</Typography>
        )}
      </Grid>

      <Modal
        open={modalIsOpen}
        onClose={closeModal}
        aria-labelledby="Détails du module"
      >
        <Box sx={modalStyle}>
          <Typography variant="h6">Détails du module</Typography>
          {selectedCourse && (
            <div>
              <Typography><strong>Objectifs :</strong> {selectedCourse.objectifs}</Typography>
              <Typography><strong>Nom du professeur :</strong> {selectedCourse.name}</Typography>
              <Typography><strong>Nom  responsable :</strong> {selectedCourse.etudiant_name}</Typography>
              <Typography><strong>Heure Totale :</strong> {selectedCourse.heureTotal}</Typography>
            </div>
          )}
          <Button onClick={closeModal}>Fermer</Button>
        </Box>
      </Modal>
      <SuivreCoursModal
        open={modalOpen}
        onClose={handleModalClose}
        onSave={handleSaveSuivi}
      />
    </Grid>

  );
}

export default ClasseDetails;